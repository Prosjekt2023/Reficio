@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    <li class="nav-item">
        <a id="manage" class="nav-link text-white" asp-controller="Manage" asp-action="Index" title="Manage">Velkommen tilbake @UserManager.GetUserName(User)!</a>
    </li>
    <li class="nav-item">
        <form id="logoutForm" class="form-inline" asp-controller="Account" asp-action="Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button id="logout" type="submit" class="nav-link btn btn-link text-white border-0">Logg&nbsp;ut</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
            <a class="nav-link text-white" id="register" asp-controller="Account" asp-action="Register">Registrer</a>
    </li>
    <li class="nav-item">
            <a class="nav-link text-white" id="login" asp-controller="Account" asp-action="Login">Logg&nbsp;inn</a>
    </li>
}
</ul>
